// Проверить число на простоту. Число вводить с клавиатуры.

// Простое число должно быть > 1 и целым
// Заставляем ввести число > 1
do{
    inputNum = +prompt("Enter an integer greater than '1'", "");
    
    // Условие для проверки, что число ЦЕЛОЕ
    while(!Number.isInteger(inputNum)){
        inputNum = +prompt("Enter an integer greater than '1'", "");
    }
} while ( inputNum <= 1);

// Зададим счетчик или что угодно для контроля итераций
count = 0;
// Проходим по ряду целых чисел от 3 до inputNum ("2" не попадает в цикл) 
for(i = 2; i < inputNum; i++){
    // Если inputNum делится на любое из чисел в ряду, то оно составное
    if(inputNum % i == 0){
        count++; // если inputNum делится, то счетчик увеличивается
        break; // оптимизация, как только один раз поделилось - выйти из цикла
    }
}

if(count !=0){ // Если счетчик не 0, то число составное
    console.log('inputNum = ' + inputNum + ' is a composite');
}else { // Если inputNum ни разу не поделилось, то оно простое
    console.log('inputNum = ' + inputNum + ' is a prime');
}

console.log('------------------------------------------');



// Вывести в консоль все простые числа от 1 до 1000
console.log('The prime numbers from 2 to 1000');
n = 1000;
// Первый цикл итерируем от 2 до n
for(j = 2; j <= n; j++){

    // Аналогично задаем счетчик
    countTwo = 0;
    // Вторым циклом проверяем каждое число на простоту
    for(k = 2; k < j; k++){
        if(j % k == 0){
            countTwo++;
            break;
        }
    }
    // Если счетчик соответствует 0 (именно ДВОЙНОЕ равно - это сравнение, а одинарное равно ПРИСВАИВАЕТ значение 0)
    if(countTwo == 0){
        console.log(j);
    }  
}











// 2147483647 - наиболшее известное простое число

